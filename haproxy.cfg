global
    log 127.0.0.1   local0
    log 127.0.0.1   local1 debug
    #log loghost    local0 info
    maxconn 4096
    #chroot /usr/share/haproxy
    #daemon
    #debug
    #quiet

  defaults
    log     global
    mode    http
    option  httplog
    option  dontlognull
    retries 5
    maxconn 2000
    timeout connect      5000
    timeout client      50000
    timeout server      50000

  frontend localnodes
    bind *:8002
    mode http
    #compression algo gzip
    #compression type text/html text/plain text/css

    # for anything in the static asset bucket we want to ensure that it is cached for a long time
    # except for the version manifest which lists what is the current version in production
  #  http-request set-var(txn.path) path 
  #  http-response set-header Cache-Control "max-age=2592000" if { var(txn.path) -m reg version.json }
    acl gzip-yes path /gzip-yes
    acl gzip-yes path_beg /gzip-yes/

    acl gzip-broke path /gzip-broke
    acl gzip-broke path_beg /gzip-broke/

    use_backend gzip-yes if gzip-yes
    use_backend gzip-broke if gzip-broke

    default_backend nodes

  backend gzip-yes 
    mode http
    http-request set-path %[path,regsub(^\/gzip-yes\/,/,g)]
    http-request set-path %[path,regsub(^\/gzip-yes$,/,g)]
    compression algo gzip
    compression type text/html text/plain text/css
   
    http-request set-header host static-assets-dev-moo-eu-west-1.s3.amazonaws.com
    server server1 static-assets-dev-moo-eu-west-1.s3.amazonaws.com:80
  
  backend gzip-broke 
    mode http
    http-request set-path %[path,regsub(^\/gzip-broke\/,/,g)]
    http-request set-path %[path,regsub(^\/gzip-broke$,/,g)]
    compression algo gzip
    compression type text/html text/plain text/css
   
    server server1 python:8000 
  
  backend nodes
    mode http
   
    http-request set-header host static-assets-dev-moo-eu-west-1.s3.amazonaws.com
    server server1 static-assets-dev-moo-eu-west-1.s3.amazonaws.com:80
